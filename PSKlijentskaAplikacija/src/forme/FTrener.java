/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Mesto;
import domen.SkiSkola;
import domen.Trener;
import java.awt.Color;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import kontroler.Kontroler;
import pomoc.Operacija;
import pomoc.StatusOdgovora;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Milos
 */
public class FTrener extends javax.swing.JDialog {

    private int trenerId;

    /**
     * Creates new form FTrener
     */
    public FTrener(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPrezime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldJmbg = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabelIme = new javax.swing.JLabel();
        jLabelPrezime = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboSkiSkola = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Podaci o treneru");

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("JMBG:");

        jTextFieldJmbg.setEnabled(false);

        jButton1.setText("Sačuvaj izmene");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Ski skola:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3))
                            .addGap(54, 54, 54)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldIme, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(comboSkiSkola, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(107, 107, 107)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelPrezime)
                                .addComponent(jLabelIme)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabelIme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabelPrezime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboSkiSkola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextFieldJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String ime = jTextFieldIme.getText().trim();
        String prezime = jTextFieldPrezime.getText().trim();
        String jmbg = jTextFieldJmbg.getText().trim();
        SkiSkola skiSkola = (SkiSkola) comboSkiSkola.getSelectedItem();
        Trener trener;
        try {
            trener = validacija(ime, prezime, jmbg, skiSkola);
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setAkcija(Operacija.IZMENI_ODO);
            kz.setParametar(trener);
            try {
                KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
                ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
                if (so.getStatus() == StatusOdgovora.OK) {
                    osveziPodatkeOUlogovanomTreneru(trener);
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio izmene", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(FClan.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti izmene nad podacima", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboSkiSkola;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelIme;
    private javax.swing.JLabel jLabelPrezime;
    private javax.swing.JTextField jTextFieldIme;
    private javax.swing.JTextField jTextFieldJmbg;
    private javax.swing.JTextField jTextFieldPrezime;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        JOptionPane.showMessageDialog(this, "Sistem je našao podatke o treneru", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
        Trener trener = Kontroler.getLoggedUser();
        jTextFieldIme.setText(trener.getIme());
        jTextFieldPrezime.setText(trener.getPrezime());
        jTextFieldJmbg.setText(trener.getJmbg());
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setAkcija(Operacija.VRATI_SVE_ZA_ODO);
        kz.setParametar(new SkiSkola());
        try {
            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
            if (so.getStatus() == StatusOdgovora.OK) {
                List<SkiSkola> skole = (List<SkiSkola>) so.getOdgovor();
                trenerId = Kontroler.getLoggedUser().getTrenerId();
                for (SkiSkola ss : skole) {
                    comboSkiSkola.addItem(ss);
                }
            }

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FClan.class.getName()).log(Level.SEVERE, null, ex);
        }

        comboSkiSkola.setSelectedIndex(trener.getSkiSkola().getSkolaID() - 1);

    }

    private Trener validacija(String ime, String prezime, String jmbg, SkiSkola skola) throws Exception {
        boolean validnaForma = true;
        if (ime == null || ime.isEmpty()) {
            jLabelIme.setText("Niste uneli ime");
            jLabelIme.setForeground(Color.red);
            validnaForma = false;
        }
        if (prezime == null || prezime.isEmpty()) {
            jLabelPrezime.setText("Niste uneli prezime");
            jLabelPrezime.setForeground(Color.red);
            validnaForma = false;
        }
        
        if (!validnaForma) {
            throw new Exception();
        }
        return new Trener(trenerId, ime, prezime, jmbg, skola);
    }

    private void osveziPodatkeOUlogovanomTreneru(Trener trener) {
        Trener ulogovanTrener = Kontroler.getLoggedUser();
        ulogovanTrener.setIme(trener.getIme());
        ulogovanTrener.setPrezime(trener.getPrezime());
        ulogovanTrener.setJmbg(trener.getJmbg());
        ulogovanTrener.setSkiSkola(trener.getSkiSkola());
    }
}
