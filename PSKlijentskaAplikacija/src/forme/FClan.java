/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Clan;
import domen.Mesto;
import domen.Trener;
import domen.Uzrast;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import kontroler.Kontroler;
import pomoc.Operacija;
import pomoc.StatusOdgovora;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;


public class FClan extends javax.swing.JDialog {

    private boolean isEdit;

    /**
     * Creates new form FClan
     */
    public FClan(java.awt.Frame parent, boolean modal, boolean isEdit) {
        super(parent, modal);
        this.isEdit = isEdit;
        initComponents();
        if (isEdit) {
            jtxtJmbg.setEnabled(false);
        }
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtPrezime = new javax.swing.JTextField();
        jtxtJmbg = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jcbUzrast = new javax.swing.JComboBox();
        jcbTrener = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtxtUlica = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbMesto = new javax.swing.JComboBox();
        jtxtBroj = new javax.swing.JTextField();
        jlblUlicaPoruka = new javax.swing.JLabel();
        jlblBrojPoruka = new javax.swing.JLabel();
        jbtnSacuvaj = new javax.swing.JButton();
        jlblImePoruka = new javax.swing.JLabel();
        jlblPrezimePoruka = new javax.swing.JLabel();
        jlblJmbgPoruka = new javax.swing.JLabel();
        jCheckBoxStatus = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unos novog člana");

        jLabel1.setText("Ime:");

        jtxtIme.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtImeKeyPressed(evt);
            }
        });

        jLabel2.setText("Prezime:");

        jtxtPrezime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtPrezimeKeyPressed(evt);
            }
        });

        jtxtJmbg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtJmbgKeyPressed(evt);
            }
        });

        jLabel3.setText("JMBG:");

        jLabel7.setText("Uzrast:");

        jLabel8.setText("Trener:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Adresa"));

        jLabel4.setText("Ulica:");

        jtxtUlica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtUlicaKeyPressed(evt);
            }
        });

        jLabel5.setText("Broj:");

        jLabel6.setText("Mesto:");

        jtxtBroj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtBrojKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblBrojPoruka)
                    .addComponent(jlblUlicaPoruka)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtUlica)
                            .addComponent(jtxtBroj)
                            .addComponent(jcbMesto, 0, 202, Short.MAX_VALUE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtUlica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblUlicaPoruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlblBrojPoruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jbtnSacuvaj.setText("Sačuvaj");
        jbtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajActionPerformed(evt);
            }
        });

        jCheckBoxStatus.setText("Aktivan");

        jLabel9.setText("Status:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtIme, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jtxtJmbg)
                            .addComponent(jtxtPrezime, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblImePoruka, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlblPrezimePoruka, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlblJmbgPoruka, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jcbUzrast, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBoxStatus)
                                        .addComponent(jcbTrener, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jbtnSacuvaj, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jlblImePoruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jlblPrezimePoruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblJmbgPoruka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbUzrast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbTrener, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxStatus)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jbtnSacuvaj)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajActionPerformed
        String ime = jtxtIme.getText().trim();
        String prezime = jtxtPrezime.getText().trim();
        String jmbg = jtxtJmbg.getText().trim();
        String ulica = jtxtUlica.getText().trim();
        String broj = jtxtBroj.getText().trim();
        Mesto mesto = (Mesto) jcbMesto.getSelectedItem();
        Uzrast uzrast = (Uzrast) jcbUzrast.getSelectedItem();
        Trener trener = (Trener) jcbTrener.getSelectedItem();
        Clan clan;
        try {
            clan = kreirajIIzvrsiValidaciju(ime, prezime, jmbg, ulica, broj, mesto, uzrast, trener);
            if (isEdit) {
                clan.setStatus(jCheckBoxStatus.isSelected());
                KlijentskiZahtev kz = new KlijentskiZahtev();
                kz.setAkcija(Operacija.IZMENI_ODO);
                kz.setParametar(clan);
                KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
                ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
                if (so.getStatus() == StatusOdgovora.OK) {
                    Kontroler.notifyAllObservers(clan);
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio izmene", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti podatke o članu", "Greška", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                KlijentskiZahtev kz = new KlijentskiZahtev();
                kz.setAkcija(Operacija.SACUVAJ_ODO);
                kz.setParametar(clan);
                KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
                ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
                if (so.getStatus() == StatusOdgovora.OK) {
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio člana", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti člana", "Greška", JOptionPane.ERROR_MESSAGE);
                }
                resetujSvaPolja();
            }

        } catch (Exception e) {
           //JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_jbtnSacuvajActionPerformed

    private void jtxtImeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtImeKeyPressed
        jlblImePoruka.setText("");
    }//GEN-LAST:event_jtxtImeKeyPressed

    private void jtxtPrezimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPrezimeKeyPressed
        jlblPrezimePoruka.setText("");
    }//GEN-LAST:event_jtxtPrezimeKeyPressed

    private void jtxtJmbgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtJmbgKeyPressed
        jlblJmbgPoruka.setText("");
    }//GEN-LAST:event_jtxtJmbgKeyPressed

    private void jtxtUlicaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtUlicaKeyPressed
        jlblUlicaPoruka.setText("");
    }//GEN-LAST:event_jtxtUlicaKeyPressed

    private void jtxtBrojKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtBrojKeyPressed
        jlblBrojPoruka.setText("");
    }//GEN-LAST:event_jtxtBrojKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtnSacuvaj;
    private javax.swing.JComboBox jcbMesto;
    private javax.swing.JComboBox jcbTrener;
    private javax.swing.JComboBox jcbUzrast;
    private javax.swing.JLabel jlblBrojPoruka;
    private javax.swing.JLabel jlblImePoruka;
    private javax.swing.JLabel jlblJmbgPoruka;
    private javax.swing.JLabel jlblPrezimePoruka;
    private javax.swing.JLabel jlblUlicaPoruka;
    private javax.swing.JTextField jtxtBroj;
    private javax.swing.JTextField jtxtIme;
    private javax.swing.JTextField jtxtJmbg;
    private javax.swing.JTextField jtxtPrezime;
    private javax.swing.JTextField jtxtUlica;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        KlijentskiZahtev kz = new KlijentskiZahtev();

        kz.setAkcija(Operacija.VRATI_SVE_ZA_ODO);
        kz.setParametar(new Mesto());
        try {
            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
            jcbMesto.removeAllItems();
            if (so.getStatus() == StatusOdgovora.OK) {
                List<Mesto> mesta = (List<Mesto>) so.getOdgovor();
                for (Mesto mesto : mesta) {
                    jcbMesto.addItem(mesto);
                }
            }

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FClan.class.getName()).log(Level.SEVERE, null, ex);
        }

        kz.setAkcija(Operacija.VRATI_SVE_ZA_ODO);
        kz.setParametar(new Uzrast());
        try {
            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
            jcbUzrast.removeAllItems();
            if (so.getStatus() == StatusOdgovora.OK) {
                List<Uzrast> uzrasti = (List<Uzrast>) so.getOdgovor();
                for (Uzrast uzrast : uzrasti) {
                    jcbUzrast.addItem(uzrast);
                }
            }

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FClan.class.getName()).log(Level.SEVERE, null, ex);
        }

        kz.setAkcija(Operacija.VRATI_SVE_ZA_ODO);
        kz.setParametar(new Trener());
        try {
            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
            jcbTrener.removeAllItems();
            if (so.getStatus() == StatusOdgovora.OK) {
                List<Trener> treneri = (List<Trener>) so.getOdgovor();
                for (Trener trener : treneri) {
                    jcbTrener.addItem(trener);
                }
            }

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FClan.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!isEdit) {
            jCheckBoxStatus.setVisible(false);
            jLabel9.setVisible(false);
        }

    }

    private Clan kreirajIIzvrsiValidaciju(String ime, String prezime, String jmbg, String ulica, String broj, Mesto mesto, Uzrast uzrast, Trener trener) throws Exception {
        boolean validnaForma = true;
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setAkcija(Operacija.VRATI_SVE_ZA_ODO);
        kz.setParametar(new Clan());
        List<Clan> clanovi = new ArrayList<>();
        try {
            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
            if (so.getStatus() == StatusOdgovora.OK) {
                clanovi = (List<Clan>) so.getOdgovor();
            }

        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FClan.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ime == null || ime.isEmpty()) {
            jlblImePoruka.setText("Niste uneli ime");
            jlblImePoruka.setForeground(Color.red);
            validnaForma = false;
        }
        if (prezime == null || prezime.isEmpty()) {
            jlblPrezimePoruka.setText("Niste uneli prezime");
            jlblPrezimePoruka.setForeground(Color.red);
            validnaForma = false;
        }
        if (jmbg == null || jmbg.isEmpty()) {
            jlblJmbgPoruka.setText("Niste uneli jmbg");
            jlblJmbgPoruka.setForeground(Color.red);
            validnaForma = false;
        } else {
            if (jmbg.length() != 13) {
                jlblJmbgPoruka.setText("Morate uneti 13 cifara");
                validnaForma = false;
            }
        }
        if (ulica == null || ulica.isEmpty()) {
            jlblUlicaPoruka.setText("Niste uneli ulicu");
            jlblUlicaPoruka.setForeground(Color.red);
            validnaForma = false;
        }
        if (broj == null || broj.isEmpty()) {
            jlblBrojPoruka.setText("Niste uneli broj");
            jlblBrojPoruka.setForeground(Color.red);
            validnaForma = false;
        }

        for (Clan clan : clanovi) {
            if (isEdit && clan.getId() == clanid) {
                continue;
            }
            if (clan.getJmbg().equals(jmbg)) {
                JOptionPane.showMessageDialog(this, "Član sa datim jmbgom već postoji", "Upozorenje", JOptionPane.WARNING_MESSAGE);
                validnaForma = false;
            }
        }

        if (!validnaForma) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti člana", "Greška", JOptionPane.ERROR_MESSAGE);
            throw new Exception();
        }

        return new Clan(clanid, ime, prezime, jmbg, ulica, broj, mesto, uzrast, trener);

    }

    void postaviVrednostPoljima(Clan c) {
        jtxtIme.setText(c.getIme());
        jtxtPrezime.setText(c.getPrezime());
        jtxtJmbg.setText(c.getJmbg());
        jtxtUlica.setText(c.getUlica());
        jtxtBroj.setText(c.getBroj());
        jcbMesto.setSelectedItem(c.getMesto());
        jcbUzrast.setSelectedIndex(c.getUzrast().getSifra() - 1);
        jcbTrener.setSelectedIndex(c.getTrener().getTrenerId() - 1);
        jCheckBoxStatus.setSelected(c.isStatus());
        clanid = c.getId();
    }

    private int clanid;

    private void resetujSvaPolja() {
        jtxtIme.setText("");
        jtxtPrezime.setText("");
        jtxtJmbg.setText("");
        jtxtUlica.setText("");
        jtxtBroj.setText("");
        jcbMesto.setSelectedIndex(0);
        jcbTrener.setSelectedIndex(0);
        jcbUzrast.setSelectedIndex(0);
    }
}
